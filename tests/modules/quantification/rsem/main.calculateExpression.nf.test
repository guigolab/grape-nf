nextflow_process {

    name "Test Process quantify"
    script "modules/quantification/rsem/main.nf"
    process "calculateExpression"

    tag "module"

    setup {
        run("index") {
            script "modules/quantification/rsem/main.nf"
            process {
                """
                input[0] = file("${baseDir}/data/genome.fa.gz")
                input[1] = file("${baseDir}/data/annotation.gtf.gz")
                """
            }
        }
    }

    test("Should quantify with RSEM") {

        when {
            process {
                """
                input[0] = index.out
                input[1] = Channel.from([
                    [ "sample3", "test3", file("${baseDir}/data/sample3_m4_n10_toTranscriptome.bam"), "bam", "TranscriptomeAlignments", true, "MATE2_SENSE", false ]
                ])
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

    test("Should quantify with RSEM converting the input BAM file") {

        when {
            process {
                """
                input[0] = index.out
                input[1] = Channel.from([
                    [ "sample3", "test3", file("${baseDir}/data/sample3_m4_n10_toTranscriptome.bam"), "bam", "TranscriptomeAlignments", true, "MATE2_SENSE", true ]
                ])
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

    // >>> TEST COMMENTED BECAUSE RSEM 1.3.3 FAILS WITH --calc-ci
    // >>> see https://github.com/deweylab/RSEM/issues/134
    // >>> DO NOT CLEAN SNAPSHOT!
    // test("Should quantify with RSEM (with credibility intervals)") {

    //     when {
    //         params {
    //             rsemCalcCI = true
    //         }
    //         process {
    //             """
    //             input[0] = index.out
    //             input[1] = Channel.from([
    //                 [ "sample3", "test3", file("${baseDir}/data/sample3_m4_n10_toTranscriptome.bam"), "bam", "TranscriptomeAlignments", true, "MATE2_SENSE", false ]
    //             ])
    //             """
    //         }
    //     }

    //     then {
    //         assert process.success
    //         assert snapshot(process.out).match()
    //     }

    // }

}
