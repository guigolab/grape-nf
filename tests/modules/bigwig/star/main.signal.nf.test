nextflow_process {

    name "Test Process signal"
    script "modules/bigwig/star/main.nf"
    process "signal"

    tag "module"

    test("Should produce signal files using STAR") {

        setup {
            run("fastaIndex") {
                script = "modules/fastaIndex/samtools/main.nf"
                process {
                    """
                    input[0] = "${baseDir}/data/genome.fa.gz"
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = fastaIndex.out
                input[1] = Channel.from([
                    [ "sample3", "test3", file("${baseDir}/data/sample3_m4_n10_toGenome.bam"), "bam", "GenomeAlignments", true, "MATE2_SENSE"]
                ])
                """
            }
        }

        then {
            assert process.success
            with(process.out) {
                def signalDir = get(0)[0][2]
                def meta = get(0)[0] - signalDir
                def signalFiles = path(signalDir)
                                    .list()
                                    .findAll({
                                        "${it.fileName}" != "Log.out"
                                    })
                assert signalFiles.size() == 4
                assert snapshot(
                    meta,
                    signalFiles
                ).match()
            }
        }

    }

}
